
import streamlit as st
import pandas as pd
from fpdf import FPDF
from io import BytesIO
from datetime import datetime, timedelta

st.set_page_config(page_title="British Airways MayFly", layout="wide")

st.title("British Airways MayFly Generator")
st.markdown("Upload the latest MayFly .txt file to generate the formatted PDF.")

uploaded_file = st.file_uploader("Upload MayFly .txt File", type="txt")

def parse_mayfly_data(txt):
    data = []
    for line in txt.splitlines():
        parts = line.strip().split(",")
        if len(parts) >= 6:
            try:
                load = int(parts[4].replace("%", "").strip())
            except:
                load = 0
            data.append({
                "route": parts[0].strip(),
                "std": parts[1].strip(),
                "sta": parts[2].strip(),
                "reg": parts[3].strip(),
                "load_factor": load,
                "status": parts[5].strip()
            })
    return pd.DataFrame(data)

# UK & Ireland domestic airports
domestic_airports = {"ABZ", "BHD", "EDI", "GLA", "INV", "JER", "MAN", "NCL"}

def get_route_category(route):
    if not route.startswith("LHR"):
        return "UNKNOWN"
    destination = route[3:]
    if destination in domestic_airports:
        return "DOMESTIC"
    return "OTHER"

def convert_time_z_to_local(zulu_time_str):
    try:
        z_time = datetime.strptime(zulu_time_str, "%H:%M")
        local_time = z_time + timedelta(hours=1)
        return local_time.strftime("%H:%M")
    except:
        return zulu_time_str

class MayFlyPDF(FPDF):
    def header(self):
        self.set_font("Arial", "B", 12)
        self.cell(0, 10, "British Airways MayFly", ln=True, align="C")
        self.ln(5)

    def footer(self):
        self.set_y(-15)
        self.set_font("Arial", "I", 8)
        self.cell(0, 10, "Confidential Â© 2025 | Generated by Nathaniel Claxton", align="C")

    def flight_table(self, flights):
        self.set_font("Arial", "B", 10)
        self.cell(25, 8, "Route", 1)
        self.cell(25, 8, "ETD (L)", 1)
        self.cell(25, 8, "ETA (L)", 1)
        self.cell(30, 8, "Aircraft Reg", 1)
        self.cell(30, 8, "Load Factor", 1)
        self.cell(55, 8, "Status", 1)
        self.ln()
        self.set_font("Arial", "", 10)
        for _, flight in flights.iterrows():
            load = flight["load_factor"]
            if load > 90:
                self.set_text_color(255, 0, 0)  # red
            elif 70 <= load <= 90:
                self.set_text_color(255, 165, 0)  # amber
            else:
                self.set_text_color(0, 0, 0)
            self.cell(25, 8, flight["route"], 1)
            self.cell(25, 8, convert_time_z_to_local(flight["std"]), 1)
            self.cell(25, 8, convert_time_z_to_local(flight["sta"]), 1)
            self.cell(30, 8, flight["reg"], 1)
            self.cell(30, 8, f"{load}%", 1)
            self.cell(55, 8, flight["status"], 1)
            self.ln()
        self.set_text_color(0, 0, 0)

if uploaded_file:
    content = uploaded_file.read().decode("utf-8")
    df = parse_mayfly_data(content)
    df["category"] = df["route"].apply(get_route_category)

    filter_option = st.selectbox("Filter by Category", ["All", "DOMESTIC"])
    if filter_option == "DOMESTIC":
        filtered = df[df["category"] == "DOMESTIC"]
    else:
        filtered = df

    st.dataframe(filtered)

    if st.button("Generate PDF"):
        pdf = MayFlyPDF()
        pdf.add_page()
        pdf.flight_table(filtered)
        output = BytesIO()
        pdf.output(output)
        st.download_button("Download MayFly PDF", data=output.getvalue(), file_name="MayFly.pdf")
