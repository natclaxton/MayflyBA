
import streamlit as st
import pandas as pd
import re
from datetime import datetime, timedelta
from fpdf import FPDF

BA_BLUE = (0, 32, 91)
LIGHT_RED = (255, 204, 204)

class BA_PDF(FPDF):
    def header(self):
        self.set_fill_color(*BA_BLUE)
        self.set_text_color(255, 255, 255)
        self.set_font('Arial', 'B', 14)
        self.cell(0, 10, 'MayFly 25th April - British Airways', ln=True, align='C', fill=True)
        self.ln(5)

    def footer(self):
        self.set_y(-12)
        self.set_font('Arial', 'I', 8)
        self.set_text_color(100)
        self.cell(0, 8, 'Confidential ¬© 2025  |  Generated by Nathaniel Claxton', 0, 0, 'C')

    def flight_table(self, data):
        headers = ['Flight No', 'Aircraft', 'Route', 'ETD', 'Conformance', 'Load']
        widths = [30, 25, 30, 25, 30, 20]

        self.set_font('Arial', 'B', 8.5)
        self.set_fill_color(*BA_BLUE)
        self.set_text_color(255, 255, 255)
        for i in range(len(headers)):
            self.cell(widths[i], 6, headers[i], 1, 0, 'C', True)
        self.ln()

        self.set_font('Arial', '', 7.5)
        self.set_text_color(0)
        for _, row in data.iterrows():
            for i, key in enumerate(["Flight Number", "Aircraft Type", "Route", "ETD", "Conformance Time", "Load Factor"]):
                if key == "Load Factor" and int(row[key].rstrip('%')) > 100:
                    self.set_fill_color(*LIGHT_RED)
                else:
                    self.set_fill_color(255, 255, 255)
                self.cell(widths[i], 6, row[key], 1, 0, 'C', True)
            self.ln()

def parse_txt(file_content):
    blocks = re.split(r"(?=BA\d{3,4}\n)", file_content)
    flights = []

    for block in blocks:
        lines = block.strip().split("\n")
        if len(lines) < 9:
            continue

        try:
            flight_no = lines[0].strip()
            aircraft_type = lines[2].strip()
            route = lines[3].strip()

            std_match = re.search(r"STD: \d{2} Apr - (\d{2}:\d{2})z", lines[4])
            load_match = re.search(r"(\d{1,3})%Status", lines[8])

            if std_match and load_match:
                etd = std_match.group(1) + "z"
                load = int(load_match.group(1))

                etd_time = datetime.strptime(etd.replace("z", ""), "%H:%M")
                conformance_time = (etd_time - timedelta(minutes=35)).strftime("%H:%Mz")

                flights.append({
                    "Flight Number": flight_no,
                    "Aircraft Type": aircraft_type,
                    "Route": route,
                    "ETD": etd,
                    "Conformance Time": conformance_time,
                    "Load Factor": f"{load}%",
                    "Load Factor Numeric": load
                })

        except Exception:
            continue

    df = pd.DataFrame(flights)
    if not df.empty:
        df = df[df["Load Factor Numeric"] >= 90]
        df = df.sort_values(by="ETD")

    return df

st.set_page_config(page_title="British Airways MayFly Generator", page_icon="‚úàÔ∏è")
st.title("‚úàÔ∏è British Airways MayFly PDF Generator")

uploaded_file = st.file_uploader("Upload your .txt file here", type=["txt"])

if uploaded_file:
    content = uploaded_file.read().decode("utf-8")
    flights_df = parse_txt(content)

    if not flights_df.empty:
        st.success(f"Processed {len(flights_df)} flights above 90% load factor.")

        pdf = BA_PDF(orientation='P', unit='mm', format='A4')
        pdf.set_auto_page_break(auto=True, margin=10)
        pdf.add_page()
        pdf.flight_table(flights_df)

        pdf_output_path = "/tmp/BA_MayFly_Output.pdf"
        pdf.output(pdf_output_path)

        with open(pdf_output_path, "rb") as file:
            st.download_button(
                label="üìÅ Download MayFly PDF",
                data=file,
                file_name="BA_MayFly_25April.pdf",
                mime="application/pdf"
            )

        st.info("Footer: Confidential ¬© 2025 | Generated by Nathaniel Claxton")
    else:
        st.error("No valid flights found above 90% load factor. Please check your .txt file.")
