import pandas as pd
import streamlit as st
from fpdf import FPDF
from datetime import datetime, timedelta
import base64
import io

# Define Domestic Airport Codes (UK & Ireland)
DOMESTIC_AIRPORTS = ['ABZ', 'BHD', 'EDI', 'GLA', 'INV', 'JER', 'MAN', 'NCL', 'BFS']

# PDF Class
class PDF(FPDF):
    def header(self):
        self.set_font("Arial", "B", 12)
        self.image("https://logodownload.org/wp-content/uploads/2014/07/british-airways-logo-0.png", 10, 8, 33)
        self.cell(0, 10, "British Airways MayFly – Load Factors", border=False, ln=True, align="C")
        self.ln(10)

    def flight_table(self, flights):
        self.set_font("Arial", "", 10)
        line_height = 8
        col_widths = [20, 30, 30, 30, 20, 20, 20, 30]

        self.set_font("Arial", "B", 10)
        headers = ["Flight", "Route", "ETD", "ETA", "LF%", "Reg", "Status", "Aircraft"]
        for i, header in enumerate(headers):
            self.cell(col_widths[i], line_height, header, border=1, align="C")
        self.ln()

        self.set_font("Arial", "", 9)
        for flight in flights:
            # Load factor coloring
            lf = flight['load_factor']
            if lf > 91:
                self.set_text_color(255, 0, 0)
            elif 70 <= lf <= 91:
                self.set_text_color(255, 140, 0)
            else:
                self.set_text_color(0, 0, 0)

            # Draw row
            row = [
                flight['flight_number'],
                flight['route'],
                format_zulu_time(flight['etd']),
                format_zulu_time(flight['eta']),
                f"{flight['load_factor']}%",
                flight['registration'],
                flight['status'],
                flight['aircraft']
            ]
            for i, cell in enumerate(row):
                self.cell(col_widths[i], line_height, str(cell), border=1, align="C")
            self.ln()
        self.set_text_color(0, 0, 0)

    def footer(self):
        self.set_y(-15)
        self.set_font("Arial", "I", 8)
        self.cell(0, 10, "Confidential © 2025 | Generated by Nathaniel Claxton", 0, 0, "C")

# Time conversion: Zulu +1h
def format_zulu_time(time_str):
    try:
        utc_time = datetime.strptime(time_str, "%H:%Mz")
        local_time = utc_time + timedelta(hours=1)
        return local_time.strftime("%H:%M")
    except:
        return time_str

# Load and clean MayFly data
