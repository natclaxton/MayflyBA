import streamlit as st
from datetime import datetime, timedelta
from io import BytesIO
from fpdf import FPDF
import pytz
import re

# List of UK & Ireland airports for the Domestic filter
DOMESTIC_AIRPORTS = {'ABZ', 'BHD', 'BFS', 'BHX', 'BRS', 'DUB', 'EDI', 'EXT', 'GLA', 'INV', 'JER', 'LBA', 'LGW', 'LHR', 'LPL', 'LTN', 'MAN', 'NCL', 'NQY', 'SOU'}

# PDF generation function
class PDF(FPDF):
    def header(self):
        self.set_font('Arial', 'B', 12)
        self.cell(0, 10, 'British Airways MayFly', ln=True, align='C')

    def footer(self):
        self.set_y(-15)
        self.set_font('Arial', 'I', 8)
        self.cell(0, 10, 'Confidential Â© 2025 | Generated by Nathaniel Claxton', 0, 0, 'C')

    def flight_table(self, flights):
        self.set_font('Arial', '', 10)
        for flight in flights:
            if flight['load_factor'] >= 100:
                self.set_text_color(255, 0, 0)
            else:
                self.set_text_color(0, 0, 0)
            self.cell(0, 10, f"{flight['etd']} | {flight['route']} | {flight['load_factor']}% | {flight['status']}", ln=True)

# Streamlit app
st.title("British Airways MayFly PDF Generator")

mayfly_date = st.date_input("Select MayFly Date", datetime.today())

filter_option = st.radio("Choose Filter", ["All Flights", "Flights above 90%", "Domestic Only"])

mayfly_text = st.text_area("Paste .txt contents here")

def parse_flights(text):
    lines = text.strip().split("\n")
    flights = []
    flight = {}
    for line in lines:
        if line.startswith("BA"):
            if flight:
                flights.append(flight)
                flight = {}
            flight["route"] = line.strip()
        elif "%" in line:
            match = re.search(r'(\d+)%', line)
            if match:
                flight["load_factor"] = int(match.group(1))
        elif ":" in line and "ETD" not in flight:
            match = re.search(r'(\d{2}:\d{2})', line)
            if match:
                flight["etd"] = match.group(1)
        elif "Status:" in line:
            status = line.split("Status:")[-1].strip()
            flight["status"] = status
    if flight:
        flights.append(flight)
    return flights

def filter_flights(flights, option):
    if option == "Flights above 90%":
        return [f for f in flights if f["load_factor"] >= 90]
    elif option == "Domestic Only":
        return [f for f in flights if f["route"][3:6] in DOMESTIC_AIRPORTS]
    else:
        return flights

if mayfly_text:
    flights = parse_flights(mayfly_text)
    filtered = filter_flights(flights, filter_option)

    if not filtered:
        st.error("No valid flights found with current filter. Please check your pasted data.")
    else:
        pdf = PDF()
        pdf.add_page()
        pdf.flight_table(filtered)
        output = BytesIO()
        pdf.output(output)
        st.download_button("Download MayFly PDF", data=output.getvalue(), file_name="MayFly.pdf")
